# Convert glyph bitmaps to uint32 literals
# https://github.com/sevmeyer/textshader
# SPDX-License-Identifier: 0BSD

BITMAPS = (
" ..... ..1.. .1.1. .1.1. ..1.. .11.. .111. ..1.. ...1. .1... ..1.. ..... ..... ..... ..... ...1. "
" ..... ..1.. .1.1. 11111 .1111 .11.1 1.... ..1.. ..1.. ..1.. 11111 ..1.. ..... ..... ..... ...1. "
" ..... ..1.. .1.1. .1.1. 1.... ...1. .1111 ..1.. ..1.. ..1.. ..1.. ..1.. ..... ..... ..... ..1.. "
" ..... ..1.. ..... .1.1. .111. ..1.. 1..1. ..... ..1.. ..1.. .1.1. 11111 ..... 11111 ..... ..1.. "
" ..... ..... ..... 11111 ....1 .1.11 1..1. ..... ..1.. ..1.. ..... ..1.. ..11. ..... ..11. .1... "
" ..... ..1.. ..... .1.1. 1111. ...11 .111. ..... ..1.. ..1.. ..... ..1.. ..11. ..... ..11. .1... "
" ..... ..... ..... ..... ..1.. ..... ..... ..... ...1. .1... ..... ..... ...1. ..... ..... ..... "

" .111. ...1. .111. 1111. ...11 11111 .111. 11111 .111. .111. ..... ..... ..... ..... ..... .111. "
" 1...1 ..11. 1...1 ....1 ..1.1 1.... 1.... ....1 1...1 1...1 ..11. ..11. ...1. ..... .1... ....1 "
" 1...1 .1.1. ....1 ..11. .1..1 1111. 1111. ...1. .111. 1...1 ..11. ..11. ..1.. 11111 ..1.. ....1 "
" 1...1 ...1. .111. ....1 1...1 ....1 1...1 ...1. 1...1 .1111 ..... ..... .1... ..... ...1. ..11. "
" 1...1 ...1. 1.... 1...1 11111 1...1 1...1 ..1.. 1...1 ....1 ..11. ..11. ..1.. 11111 ..1.. ..... "
" .111. ...1. 11111 .111. ....1 .111. .111. ..1.. .111. .111. ..11. ..11. ...1. ..... .1... ..1.. "
" ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ...1. ..... ..... ..... ..... "

" .111. .111. 1111. .111. 1111. 11111 11111 .1111 1...1 11111 .1111 1...1 1.... 1...1 1...1 .111. "
" 1...1 1...1 1...1 1...1 1...1 1.... 1.... 1.... 1...1 ..1.. ....1 1..1. 1.... 11.11 11..1 1...1 "
" 1.111 1...1 1111. 1.... 1...1 1111. 1.... 1.111 11111 ..1.. ....1 1.1.. 1.... 1.1.1 1.1.1 1...1 "
" 1.1.1 11111 1...1 1.... 1...1 1.... 1111. 1...1 1...1 ..1.. ....1 111.. 1.... 1...1 1..11 1...1 "
" 1.111 1...1 1...1 1...1 1...1 1.... 1.... 1...1 1...1 ..1.. 1...1 1..1. 1.... 1...1 1...1 1...1 "
" 1.... 1...1 1111. .111. 1111. 11111 1.... .1111 1...1 11111 .111. 1...1 11111 1...1 1...1 .111. "
" .111. ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... "

" 1111. .111. 1111. .1111 11111 1...1 1...1 1...1 1...1 1...1 11111 .111. .1... .111. ..1.. ..... "
" 1...1 1...1 1...1 1.... ..1.. 1...1 1...1 1...1 .1.1. 1...1 ...1. .1... .1... ...1. .1.1. ..... "
" 1...1 1...1 1...1 .111. ..1.. 1...1 1...1 1.1.1 ..1.. .1.1. ..1.. .1... ..1.. ...1. 1...1 ..... "
" 1111. 1.1.1 1111. ....1 ..1.. 1...1 .1.1. 1.1.1 ..1.. ..1.. .1... .1... ..1.. ...1. ..... ..... "
" 1.... 1..1. 1..1. 1...1 ..1.. 1...1 .1.1. .1.1. .1.1. ..1.. 1.... .1... ...1. ...1. ..... ..... "
" 1.... .11.1 1...1 .111. ..1.. .111. ..1.. .1.1. 1...1 ..1.. 11111 .1... ...1. ...1. ..... ..... "
" ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... ..... .111. ..... .111. ..... 11111 "

" .1... ..... 1.... ..... ....1 ..... .111. ..... 1.... ...1. ....1 1.... 111.. ..... ..... ..... "
" ..1.. .111. 1111. .111. .1111 .111. 1...1 .1111 1111. ..... ..... 1...1 ..1.. 1111. 1111. .111. "
" ...1. ....1 1...1 1...1 1...1 1...1 1.... 1...1 1...1 1111. .1111 1..1. ..1.. 1.1.1 1...1 1...1 "
" ..... .1111 1...1 1.... 1...1 11111 1111. 1...1 1...1 ...1. ....1 1.1.. ..1.. 1.1.1 1...1 1...1 "
" ..... 1...1 1...1 1...1 1...1 1.... 1.... .1111 1...1 ...1. ....1 11.1. ..1.. 1.1.1 1...1 1...1 "
" ..... .1111 1111. .111. .1111 .111. 1.... ....1 1...1 ...1. 1...1 1...1 ...11 1.1.1 1...1 .111. "
" ..... ..... ..... ..... ..... ..... ..... .111. ..... ..... .111. ..... ..... ..... ..... ..... "

" ..... ..... ..... ..... 1.... ..... ..... ..... ..... ..... ..... ..11. ..1.. .11.. ..... ..... "
" 1111. .1111 1111. .1111 1111. 1...1 1...1 1...1 1...1 1...1 11111 .1... ..1.. ...1. ..... ..... "
" 1...1 1...1 1...1 1.... 1.... 1...1 1...1 1.1.1 .1.1. 1...1 ...1. .1... ..1.. ...1. .1..1 ..... "
" 1...1 1...1 1.... .111. 1.... 1...1 .1.1. 1.1.1 ..1.. 1...1 ..1.. 1.... ..1.. ....1 1.1.1 ..... "
" 1111. .1111 1.... ....1 1...1 1...1 .1.1. .1.1. .1.1. .1111 .1... .1... ..1.. ...1. 1..1. ..... "
" 1.... ....1 1.... 1111. .111. .1111 ..1.. .1.1. 1...1 ....1 11111 .1... ..1.. ...1. ..... ..... "
" 1.... ....1 ..... ..... ..... ..... ..... ..... ..... .111. ..... ..11. ..1.. .11.. ..... ..... ").split()

ROWS = 6
COLS = 16
NEWLINE_EVERY = 6

out = ""
for row in range(ROWS):
    for col in range(COLS):
        start = row*COLS*7 + col
        lines = [BITMAPS[start + y*COLS] for y in range(7)]
        lines = [line[::-1].replace(".", "0") for line in lines]
        bits = ""

        if   lines[6] == "00000":  bits = "00" + "".join(lines[:6])
        elif lines[0] == "00000":  bits = "01" + "".join(lines[1:])
        elif lines[0] == lines[6]: bits = "10" + "".join(lines[1:])
        elif lines[3] == lines[4]: bits = "11" + "".join(lines[5:] + lines[:4])

        if len(bits) != 32:
            raise ValueError(f"Invalid bitmap: {chr(0x20 + row*COLS + col)}")

        out += f"0x{int(bits, 2):08X},"
        if (row*COLS + col) % NEWLINE_EVERY == NEWLINE_EVERY - 1:
            out += "\n"
print(out)
